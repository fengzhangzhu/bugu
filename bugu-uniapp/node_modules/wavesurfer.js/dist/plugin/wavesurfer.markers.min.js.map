{"version":3,"file":"wavesurfer.markers.min.js","mappings":"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","sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/./src/plugin/markers/index.js","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"markers\"] = factory();\n})(self, function() {\nreturn ","\n/**\n * @typedef {Object} MarkerParams\n * @desc The parameters used to describe a marker.\n * @example wavesurfer.addMarker(regionParams);\n * @property {number} time The time to set the marker at\n * @property {?label} string An optional marker label\n * @property {?color} string Background color for marker\n * @property {?position} string \"top\" or \"bottom\", defaults to \"bottom\"\n * @property {?markerElement} element An HTML element to display instead of the default marker image\n */\n\n\n/**\n * Markers are points in time in the audio that can be jumped to.\n *\n * @implements {PluginClass}\n *\n * @example\n * import MarkersPlugin from 'wavesurfer.markers.js';\n *\n * // if you are using <script> tags\n * var MarkerPlugin = window.WaveSurfer.markers;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     MarkersPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\n\nconst DEFAULT_FILL_COLOR = \"#D8D8D8\";\nconst DEFAULT_POSITION = \"bottom\";\n\nexport default class MarkersPlugin {\n    /**\n     * @typedef {Object} MarkersPluginParams\n     * @property {?MarkerParams[]} markers Initial set of markers\n     * @fires MarkersPlugin#marker-click\n     */\n\n    /**\n     * Markers plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {MarkersPluginParams} params parameters use to initialise the plugin\n     * @since 4.6.0\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'markers',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addMarker(options) {\n                    if (!this.initialisedPluginList.markers) {\n                        this.initPlugin('markers');\n                    }\n                    return this.markers.add(options);\n                },\n                clearMarkers() {\n                    this.markers && this.markers.clear();\n                }\n            },\n            instance: MarkersPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.markerWidth = 11;\n        this.markerHeight = 22;\n\n\n        this._onResize = () => {\n            this._updateMarkerPositions();\n        };\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.markers) {\n                this.params.markers.forEach(marker => this.add(marker));\n            }\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n            this.wavesurfer.on('zoom', this._onResize);\n        };\n\n        this.markers = [];\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            this._updateMarkerPositions();\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n\n        this.wavesurfer.un('zoom', this._onResize);\n\n        window.removeEventListener('resize', this._onResize, true);\n        window.removeEventListener('orientationchange', this._onResize, true);\n\n        this.clear();\n    }\n\n    /**\n     * Add a marker\n     *\n     * @param {MarkerParams} params Marker definition\n     * @return {object} The created marker\n     */\n    add(params) {\n        let marker = {\n            time: params.time,\n            label: params.label,\n            color: params.color || DEFAULT_FILL_COLOR,\n            position: params.position || DEFAULT_POSITION\n        };\n\n        if (params.markerElement) {\n            this.markerWidth = params.markerElement.width;\n            this.markerHeight = params.markerElement.height;\n        }\n\n        marker.el = this._createMarkerElement(marker, params.markerElement);\n\n        this.wrapper.appendChild(marker.el);\n        this.markers.push(marker);\n        this._updateMarkerPositions();\n\n        return marker;\n    }\n\n    /**\n     * Remove a marker\n     *\n     * @param {number} index Index of the marker to remove\n     */\n    remove(index) {\n        let marker = this.markers[index];\n        if (!marker) {\n            return;\n        }\n\n        this.wrapper.removeChild(marker.el);\n        this.markers.splice(index, 1);\n    }\n\n    _createPointerSVG(color, position) {\n        const svgNS = \"http://www.w3.org/2000/svg\";\n\n        const el = document.createElementNS(svgNS, \"svg\");\n        const polygon = document.createElementNS(svgNS, \"polygon\");\n\n        el.setAttribute(\"viewBox\", \"0 0 40 80\");\n\n        polygon.setAttribute(\"id\", \"polygon\");\n        polygon.setAttribute(\"stroke\", \"#979797\");\n        polygon.setAttribute(\"fill\", color);\n        polygon.setAttribute(\"points\", \"20 0 40 30 40 80 0 80 0 30\");\n        if ( position == \"top\" ) {\n            polygon.setAttribute(\"transform\", \"rotate(180, 20 40)\");\n        }\n\n        el.appendChild(polygon);\n\n        this.style(el, {\n            width: this.markerWidth + \"px\",\n            height: this.markerHeight + \"px\",\n            \"min-width\": this.markerWidth + \"px\",\n            \"margin-right\": \"5px\",\n            \"z-index\": 4\n        });\n        return el;\n    }\n\n    _createMarkerElement(marker, markerElement) {\n        let label = marker.label;\n        let time = marker.time;\n\n        const el = document.createElement('marker');\n        el.className = \"wavesurfer-marker\";\n\n        this.style(el, {\n            position: \"absolute\",\n            height: \"100%\",\n            display: \"flex\",\n            overflow: \"hidden\",\n            \"flex-direction\": (marker.position == \"top\" ? \"column-reverse\" : \"column\")\n        });\n\n        const line = document.createElement('div');\n        this.style(line, {\n            \"flex-grow\": 1,\n            \"margin-left\": (this.markerWidth / 2 - 0.5) + \"px\",\n            background: \"black\",\n            width: \"1px\",\n            opacity: 0.1\n        });\n        el.appendChild(line);\n\n        const labelDiv = document.createElement('div');\n        const point = markerElement || this._createPointerSVG(marker.color, marker.position);\n        labelDiv.appendChild(point);\n\n        if ( label ) {\n            const labelEl = document.createElement('span');\n            labelEl.innerText = label;\n            this.style(labelEl, {\n                \"font-family\": \"monospace\",\n                \"font-size\": \"90%\"\n            });\n            labelDiv.appendChild(labelEl);\n        }\n\n        this.style(labelDiv, {\n            display: \"flex\",\n            \"align-items\": \"center\",\n            cursor: \"pointer\"\n        });\n\n        el.appendChild(labelDiv);\n\n        labelDiv.addEventListener(\"click\", e => {\n            e.stopPropagation();\n            this.wavesurfer.setCurrentTime(time);\n            this.wavesurfer.fireEvent(\"marker-click\", marker, e);\n        });\n\n        return el;\n    }\n\n    _updateMarkerPositions() {\n        const duration = this.wavesurfer.getDuration();\n\n        for ( let i = 0 ; i < this.markers.length; i++ ) {\n            let marker = this.markers[i];\n            const elementWidth =\n                this.wavesurfer.drawer.width /\n                this.wavesurfer.params.pixelRatio;\n\n            const positionPct = Math.min(marker.time / duration, 1);\n            const leftPx = ((elementWidth * positionPct) - (this.markerWidth / 2));\n            this.style(marker.el, {\n                \"left\":  leftPx + \"px\",\n                \"max-width\": (elementWidth - leftPx) + \"px\"\n            });\n        }\n    }\n\n    /**\n     * Remove all markers\n     */\n    clear() {\n        while ( this.markers.length > 0 ) {\n            this.remove(0);\n        }\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(188);\n"],"names":["root","factory","exports","module","define","amd","self","MarkersPlugin","params","ws","this","wavesurfer","util","style","markerWidth","markerHeight","_onResize","_updateMarkerPositions","_onBackendCreated","wrapper","drawer","markers","forEach","marker","add","window","addEventListener","on","_onReady","name","deferInit","staticProps","addMarker","options","initialisedPluginList","initPlugin","clearMarkers","clear","instance","isReady","once","un","removeEventListener","time","label","color","position","markerElement","width","height","el","_createMarkerElement","appendChild","push","index","removeChild","splice","svgNS","document","createElementNS","polygon","setAttribute","createElement","className","display","overflow","line","background","opacity","labelDiv","point","_createPointerSVG","labelEl","innerText","cursor","e","stopPropagation","setCurrentTime","fireEvent","duration","getDuration","i","length","elementWidth","pixelRatio","leftPx","Math","min","remove","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}
"use strict";var e=require("../../../../../../common/vendor.js"),t=require("../z-paging-utils.js"),n=require("../z-paging-constant.js"),r=require("../z-paging-i18n.js");const a=e.index.getSystemInfoSync(),i={props:{language:{type:String,default:t.u.gc("language","")},followSystemLanguage:{type:Boolean,default:t.u.gc("followSystemLanguage",!0)}},data:()=>({tempLanguageUpdateKey:0}),computed:{tempLanguage(){let t=!1;return this.tempLanguageUpdateKey,this.followSystemLanguage&&(t=a.language),e.index.getStorageSync(n.c.i18nUpdateKey)||t||"zh-cn"},finalTempLanguage(){return this.language.length?this.language:this.tempLanguage},finalLanguage(){let e=this.finalTempLanguage.toLowerCase();return r.zI18n._getPrivateLanguage(e,this.followSystemLanguage)},finalRefresherDefaultText(){return this._getI18nText("refresherDefaultText",this.refresherDefaultText)},finalRefresherPullingText(){return this._getI18nText("refresherPullingText",this.refresherPullingText)},finalRefresherRefreshingText(){return this._getI18nText("refresherRefreshingText",this.refresherRefreshingText)},finalRefresherCompleteText(){return this._getI18nText("refresherCompleteText",this.refresherCompleteText)},finalLoadingMoreDefaultText(){return this._getI18nText("loadingMoreDefaultText",this.loadingMoreDefaultText)},finalLoadingMoreLoadingText(){return this._getI18nText("loadingMoreLoadingText",this.loadingMoreLoadingText)},finalLoadingMoreNoMoreText(){return this._getI18nText("loadingMoreNoMoreText",this.loadingMoreNoMoreText)},finalLoadingMoreFailText(){return this._getI18nText("loadingMoreFailText",this.loadingMoreFailText)},finalEmptyViewText(){return this.isLoadFailed?this.finalEmptyViewErrorText:this._getI18nText("emptyViewText",this.emptyViewText)},finalEmptyViewReloadText(){return this._getI18nText("emptyViewReloadText",this.emptyViewReloadText)},finalEmptyViewErrorText(){return this._getI18nText("emptyViewErrorText",this.emptyViewErrorText)}},methods:{setI18n(e){r.zI18n.setLanguage(e)},getLanguage(){return this.finalLanguage},_getI18nText(e,t){const n=Object.prototype.toString.call(t);if("[object Object]"===n){const e=t[this.finalLanguage];if(e)return e}else if("[object String]"===n)return t;return r.zI18n.t[e][this.finalLanguage]}}};exports.ZPI18n=i;

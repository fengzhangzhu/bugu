{"version":3,"sources":["uni-app:///main.js","webpack:///E:/Project/uniapp/bugu-star-uniapp/pages/message-secondary-page/chat-content/chat-content.vue?05f7","webpack:///E:/Project/uniapp/bugu-star-uniapp/pages/message-secondary-page/chat-content/chat-content.vue?ee9d","webpack:///E:/Project/uniapp/bugu-star-uniapp/pages/message-secondary-page/chat-content/chat-content.vue?6c1c","uni-app:///pages/message-secondary-page/chat-content/chat-content.vue?vue&type=script&lang=ts&","uni-app:///pages/message-secondary-page/chat-content/chat-content.vue","webpack:///E:/Project/uniapp/bugu-star-uniapp/pages/message-secondary-page/chat-content/chat-content.vue?cc10","webpack:///E:/Project/uniapp/bugu-star-uniapp/pages/message-secondary-page/chat-content/chat-content.vue?768f"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","sendText","inputFocus","onLineState","fromUserInfo","myUserInfo","messageGroup","keyboardHeight","emojiContentHeight","showEmojiPicker","expressionTabPage","isRecording","sendVoice","scrollInto","state","store","GettimeifferenceOfNow","navHeight","contentHeight","recorderManager","uni","getRecorderManager","touchY","cancelSendVoice","showSendVoiceToast","voiceFile","voiceTime","stopTimer","selectChatItem","onReady","_this","getSystemInfo","success","res","windowHeight","titleH","createSelectorQuery","select","boundingClientRect","top","exec","onShow","$once","REFRESH_CHAT_CONTENT","needRefresh","$refs","customExpression","refresh","id","beforeMessageGroup","messages","messagesSize","length","onLoad","params","initRecorderAndKeyboardManager","showLoading","title","fromUserId","console","log","hideLoading","beforeUserMessageList","i","userId","unreadSum","storageKey","setStorage","key","isMe","isNotRead","getIsBeenRead","IsBeenRead","unread","messageDataProcessing","saveNewestMessageGroup","computed","fromUsername","username","slice","newMessage","messageStore","scollerHeight","watch","new_message","type","WITHDRAW","j","messageId","content","createTime","USER_MESSAGE","getUnReadMessage","push","time","ALREADY_READ","saveNewestUserMessage","methods","onKeyboardHeightChange","height","onStart","onPause","onStop","clearInterval","Math","floor","duration","showToast","icon","uploadImageOrVoice","tempFilePath","recordingPopup","close","onFrameRecorded","frameBuffer","byteLength","onNarLeftClick","navigateBack","delta","onCopyTextClick","setClipboardData","chatItemActionPopup","onAddExpressionClick","fileName","replace","ImageFatherPath","addExpression","onDeleteTextClick","deleteMessage","onWithdrawTextClick","withdrawMessage","onInputFocus","onContentClick","hideKeyboard","onChatItemLongPress","chatItem","open","onInput","e","detail","value","onVoiceButtonTouchStart","isVerify","changedTouches","clientY","start","options","voiceTimer","onVoiceButtonTouchEnd","stop","onVoiceButtonTouchMove","sendButtonClick","sendMessage","onChangeSendTypeClick","onImageChooseClick","chooseImage","count","sizeType","sourceType","tempFilePaths","onCameraIconClick","onSmileIconClick","onSwiperChange","current","onExpressionTabClick","page","onEmojiItemClick","item","onCustomExpressionClick","url","onHistoryIconClick","navigateTo","showChatCreatTime","index","showtime","menit","setTimeout","filename","method","group","action","header","code","REQUEST_SUCCEEDED_CODE","splice","toUserId","text","voiceLen","result","badgeNumber","ids","JSON","stringify","unReadMessage","concat","iDs","tempMessages","forEach","indexOf","sort","a","b","id_a","id_b","userMessageListItems","have_data","lastMessage","userMessageListItem","lastMessageType","lastTime","avatar","online","filePath","uploadImageOrVoices","filesNumber","sum","FileVouchers","uploadFile","UploadUrl","name","formData","aes","decrypt","token"],"mappings":"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","file":"pages/message-secondary-page/chat-content/chat-content.js","sourcesContent":["import 'uni-pages';wx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/message-secondary-page/chat-content/chat-content.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./chat-content.vue?vue&type=template&id=0ea17eb2&\"\nvar renderjs\nimport script from \"./chat-content.vue?vue&type=script&lang=ts&\"\nexport * from \"./chat-content.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./chat-content.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/message-secondary-page/chat-content/chat-content.vue\"\nexport default component.exports","export * from \"-!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./chat-content.vue?vue&type=template&id=0ea17eb2&\"","var components\ntry {\n  components = {\n    uniNavBar: function() {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-nav-bar/components/uni-nav-bar/uni-nav-bar\" */ \"@/uni_modules/uni-nav-bar/components/uni-nav-bar/uni-nav-bar.vue\"\n      )\n    },\n    chatItem: function() {\n      return import(\n        /* webpackChunkName: \"components/chat-item/chat-item\" */ \"@/components/chat-item/chat-item.vue\"\n      )\n    },\n    uniPopup: function() {\n      return import(\n        /* webpackChunkName: \"uni_modules/uni-popup/components/uni-popup/uni-popup\" */ \"@/uni_modules/uni-popup/components/uni-popup/uni-popup.vue\"\n      )\n    },\n    emoji: function() {\n      return import(\n        /* webpackChunkName: \"components/emoji/emoji\" */ \"@/components/emoji/emoji.vue\"\n      )\n    },\n    customExpression: function() {\n      return import(\n        /* webpackChunkName: \"components/custom-expression/custom-expression\" */ \"@/components/custom-expression/custom-expression.vue\"\n      )\n    },\n    actionSheet: function() {\n      return import(\n        /* webpackChunkName: \"components/action-sheet/action-sheet\" */ \"@/components/action-sheet/action-sheet.vue\"\n      )\n    },\n    actionSheetItem: function() {\n      return import(\n        /* webpackChunkName: \"components/action-sheet-item/action-sheet-item\" */ \"@/components/action-sheet-item/action-sheet-item.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var l0 = _vm.messageGroup.messages\n    ? _vm.__map(_vm.messageGroup.messages, function(item, index) {\n        var $orig = _vm.__get_orig(item)\n\n        var m0 = _vm.showChatCreatTime(index)\n        var m1 = m0 ? _vm.GettimeifferenceOfNow(item.createTime) : null\n        return {\n          $orig: $orig,\n          m0: m0,\n          m1: m1\n        }\n      })\n    : null\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        l0: l0\n      }\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/ts-loader/index.js??ref--13-1!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-2!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./chat-content.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/ts-loader/index.js??ref--13-1!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-2!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./chat-content.vue?vue&type=script&lang=ts&\"","import { GettimeifferenceOfNow, GetNumberOfMenit, getTime } from \"@/utils/dateUtils\";\r\nimport { getMyUserInfo, getChatRecord, getUserMessageList, } from \"@/common/storageFunctions\";\r\nimport { GetonlineState, getUserinfo } from \"@/common/requestFunctions\";\r\nimport { REQUEST_SUCCEEDED_CODE, USER_MESSAGE, WITHDRAW, ALREADY_READ, UploadUrl, ImageFatherPath } from \"@/common/constants\";\r\nimport { request } from \"@/utils/request\";\r\nimport { getUserMessageListKey, getChatRecordKey, } from \"@/common/storageKeys\";\r\nimport store from '@/store/index';\r\nimport aes from \"@/utils/aes/export\";\r\nimport { REFRESH_CHAT_CONTENT } from \"@/common/globalMsgKeys\";\r\nimport { changeUnreadMessageSum } from \"@/utils/tabBarBadgeUtils\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            sendText: '',\r\n            inputFocus: false,\r\n            onLineState: false,\r\n            fromUserInfo: {},\r\n            myUserInfo: {},\r\n            messageGroup: {},\r\n            keyboardHeight: 0,\r\n            emojiContentHeight: 300,\r\n            showEmojiPicker: false,\r\n            expressionTabPage: 0,\r\n            isRecording: false,\r\n            sendVoice: false,\r\n            scrollInto: '',\r\n            state: store.state,\r\n            GettimeifferenceOfNow,\r\n            navHeight: 0,\r\n            contentHeight: 0,\r\n            recorderManager: uni.getRecorderManager(),\r\n            touchY: 0,\r\n            cancelSendVoice: false,\r\n            showSendVoiceToast: false,\r\n            voiceFile: {},\r\n            voiceTime: 0,\r\n            stopTimer: false,\r\n            selectChatItem: {},\r\n        };\r\n    },\r\n    onReady() {\r\n        let _this = this;\r\n        uni.getSystemInfo({\r\n            success(res) {\r\n                _this.contentHeight = res.windowHeight;\r\n            }\r\n        });\r\n        let titleH = uni.createSelectorQuery().select(\"#chat-scrollview\"); //想要获取高度的元素名（class/id）\r\n        titleH.boundingClientRect(data => {\r\n            _this.navHeight = data.top;\r\n            //计算高度：元素高度=窗口高度-元素距离顶部的距离（data.top）\r\n        }).exec();\r\n    },\r\n    onShow() {\r\n        let _this = this;\r\n        uni.$once(REFRESH_CHAT_CONTENT, async function (data) {\r\n            if (data.needRefresh) {\r\n                _this.$refs.customExpression.refresh();\r\n                let beforeMessageGroup = await getChatRecord(_this.myUserInfo.id, _this.fromUserInfo.id);\r\n                _this.messageGroup = beforeMessageGroup;\r\n                let messages = _this.messageGroup.messages;\r\n                let messagesSize = messages.length;\r\n                if (messagesSize > 0) {\r\n                    _this.scrollInto = `chat_${messages[messages.length - 1].id}`;\r\n                }\r\n            }\r\n        });\r\n    },\r\n    async onLoad(params) {\r\n        this.initRecorderAndKeyboardManager();\r\n        uni.showLoading({\r\n            title: \"加载中\"\r\n        });\r\n        let fromUserId = params.fromUserId;\r\n        let myUserInfo = await getMyUserInfo();\r\n        if (!fromUserId || !myUserInfo) {\r\n            return;\r\n        }\r\n        this.myUserInfo = myUserInfo;\r\n        let beforeMessageGroup = await getChatRecord(myUserInfo.id, fromUserId);\r\n        console.log(beforeMessageGroup);\r\n        this.messageGroup = beforeMessageGroup;\r\n        let messages = this.messageGroup.messages;\r\n        let messagesSize = messages.length;\r\n        uni.hideLoading();\r\n        this.onLineState = await GetonlineState(fromUserId);\r\n        this.fromUserInfo = await getUserinfo(fromUserId);\r\n        if (messagesSize > 0) {\r\n            this.scrollInto = `chat_${messages[messages.length - 1].id}`;\r\n            //将消息列表对应用户的未读数设为0\r\n            let beforeUserMessageList = await getUserMessageList(myUserInfo.id);\r\n            for (let i = 0; i < beforeUserMessageList.length; i++) {\r\n                if (fromUserId == beforeUserMessageList[i].userId) {\r\n                    changeUnreadMessageSum(-beforeUserMessageList[i].unreadSum);\r\n                    beforeUserMessageList[i].unreadSum = 0; //未读消息设为零\r\n                    let storageKey = getUserMessageListKey(myUserInfo.id);\r\n                    await uni.setStorage({\r\n                        key: storageKey,\r\n                        data: beforeUserMessageList\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            //判断最后一条消息的已读未读状态 最后一条消息已读的话之前的消息也一定已读\r\n            if (messages[messagesSize - 1].isMe && messages[messagesSize - 1].isNotRead) {\r\n                let IsBeenRead = await this.getIsBeenRead([messages[messagesSize - 1].id]);\r\n                if (!IsBeenRead[0].unread) {\r\n                    for (let i = messagesSize - 1; i >= 0; i--) {\r\n                        if (messages[i].isMe && messages[i].isNotRead) {\r\n                            messages[i].isNotRead = false;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.messageGroup.messages = await this.messageDataProcessing(messages, fromUserId);\r\n        if (this.messageGroup.messages.length > 0) {\r\n            this.scrollInto = `chat_${messages[messages.length - 1].id}`;\r\n        }\r\n        this.saveNewestMessageGroup();\r\n    },\r\n    computed: {\r\n        fromUsername() {\r\n            if (!this.fromUserInfo.username) {\r\n                return '';\r\n            }\r\n            else {\r\n                return this.fromUserInfo.username.length > 7 ?\r\n                    this.fromUserInfo.username.slice(0, 7) + '...' :\r\n                    this.fromUserInfo.username;\r\n            }\r\n        },\r\n        newMessage() {\r\n            return this.state.messageStore.newMessage;\r\n        },\r\n        scollerHeight() {\r\n            let keyboardHeight = this.showEmojiPicker ? this.emojiContentHeight : this.keyboardHeight;\r\n            return this.contentHeight - keyboardHeight - this.navHeight - 110;\r\n        }\r\n    },\r\n    watch: {\r\n        newMessage: async function (new_message) {\r\n            if (new_message.type === WITHDRAW) {\r\n                if (new_message.data.userId == this.fromUserInfo.id) {\r\n                    if (this.messageGroup) {\r\n                        let messages = this.messageGroup.messages;\r\n                        for (let j = messages.length - 1; j >= 0; j--) {\r\n                            if (messages[j].id == new_message.data.messageId) {\r\n                                messages[j] = {\r\n                                    content: '对方撤回了一条消息',\r\n                                    type: -1,\r\n                                    id: new_message.data.messageId,\r\n                                    createTime: messages[j].createTime,\r\n                                    isMe: false\r\n                                };\r\n                                break;\r\n                            }\r\n                        }\r\n                        this.messageGroup.messages = messages;\r\n                        this.scrollInto = `chat_${messages[messages.length - 1].id}`;\r\n                    }\r\n                }\r\n            }\r\n            else if (new_message.type === USER_MESSAGE) {\r\n                if (new_message.data.fromUserId == this.fromUserInfo.id) {\r\n                    this.getUnReadMessage(this.fromUserInfo.id); //通知消息已读\r\n                    if (this.messageGroup) {\r\n                        let messages = this.messageGroup.messages;\r\n                        messages.push({\r\n                            content: new_message.data.content,\r\n                            type: new_message.data.type,\r\n                            id: new_message.data.id,\r\n                            isMe: false,\r\n                            createTime: getTime(),\r\n                            time: new_message.data.time\r\n                        });\r\n                        this.messageGroup.messages = messages;\r\n                        this.scrollInto = `chat_${messages[messages.length - 1].id}`;\r\n                    }\r\n                }\r\n            }\r\n            else if (new_message.type === ALREADY_READ) {\r\n                if (new_message.data.userId == this.fromUserInfo.id) {\r\n                    console.log(\"ALREADY_READ\", ALREADY_READ);\r\n                    if (this.messageGroup) {\r\n                        let messages = this.messageGroup.messages;\r\n                        for (let i = messages.length - 1; i >= 0; i--) {\r\n                            //消息全部设为已读\r\n                            if (messages[i].isMe && messages[i].isNotRead) {\r\n                                messages[i].isNotRead = false;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        this.messageGroup.messages = messages;\r\n                    }\r\n                }\r\n            }\r\n            this.saveNewestUserMessage(); //更新消息列表\r\n        },\r\n    },\r\n    methods: {\r\n        /**\r\n         * @description 初始化键盘和录音的一些响应事件\r\n         */\r\n        initRecorderAndKeyboardManager() {\r\n            uni.onKeyboardHeightChange(async (res) => {\r\n                if (res.height != 0) {\r\n                    this.keyboardHeight = res.height;\r\n                    this.emojiContentHeight = res.height;\r\n                    this.showEmojiPicker = false,\r\n                        this.scrollInto = 'show_keyboard';\r\n                    console.log(this.keyboardHeight);\r\n                }\r\n                else {\r\n                    this.keyboardHeight = 0;\r\n                    this.scrollInto = '';\r\n                }\r\n            });\r\n            this.recorderManager.onStart(() => {\r\n                console.log('recorder start');\r\n            });\r\n            this.recorderManager.onPause(() => {\r\n                console.log('recorder pause');\r\n            });\r\n            this.recorderManager.onStop(async (res) => {\r\n                clearInterval(); //取消计时\r\n                console.log('recorder stop', res);\r\n                if (this.cancelSendVoice) {\r\n                    console.log('取消发送');\r\n                }\r\n                else {\r\n                    let time = Math.floor(res.duration / 1000);\r\n                    if (time < 1) {\r\n                        uni.showToast({\r\n                            title: '时间过短',\r\n                            icon: 'none'\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.uploadImageOrVoice([res.tempFilePath], 2, time);\r\n                    }\r\n                }\r\n                //初始化\r\n                this.touchY = 0,\r\n                    this.cancelSendVoice = false;\r\n                this.voiceTime = 0;\r\n                this.$refs.recordingPopup.close();\r\n            });\r\n            this.recorderManager.onFrameRecorded((res) => {\r\n                const { frameBuffer } = res;\r\n                console.log('frameBuffer.byteLength', frameBuffer.byteLength);\r\n            });\r\n        },\r\n        onNarLeftClick() {\r\n            uni.navigateBack({\r\n                delta: 1\r\n            });\r\n        },\r\n        /**\r\n         * @description 点击复制文字消息\r\n         */\r\n        onCopyTextClick() {\r\n            uni.setClipboardData({ data: this.selectChatItem.content });\r\n            this.$refs.chatItemActionPopup.close();\r\n        },\r\n        /**\r\n         * @description 点击添加表情\r\n         */\r\n        onAddExpressionClick() {\r\n            let fileName = this.selectChatItem.content.replace(ImageFatherPath, '');\r\n            this.addExpression(fileName);\r\n            this.$refs.chatItemActionPopup.close();\r\n        },\r\n        /**\r\n         * @description 点击删除消息\r\n         */\r\n        onDeleteTextClick() {\r\n            this.deleteMessage(this.selectChatItem.id);\r\n            this.$refs.chatItemActionPopup.close();\r\n        },\r\n        /**\r\n         * @description 点击撤回消息\r\n         */\r\n        onWithdrawTextClick() {\r\n            this.withdrawMessage(this.selectChatItem.id);\r\n            this.$refs.chatItemActionPopup.close();\r\n        },\r\n        /**\r\n         * @description 输入文字时\r\n         */\r\n        onInputFocus() {\r\n            this.inputFocus = true;\r\n        },\r\n        /**\r\n         * @description 点击页面时\r\n         */\r\n        onContentClick() {\r\n            this.inputFocus = false;\r\n            this.showEmojiPicker = false;\r\n            uni.hideKeyboard();\r\n        },\r\n        /**\r\n         * @description 长按某个消息时\r\n         * @param {Object} chatItem 某个消息\r\n         */\r\n        onChatItemLongPress(chatItem) {\r\n            this.selectChatItem = chatItem;\r\n            this.$refs.chatItemActionPopup.open();\r\n        },\r\n        /**\r\n         * @description 输入时\r\n         * @param {Object} e\r\n         */\r\n        onInput(e) {\r\n            this.sendText = e.detail.value;\r\n        },\r\n        onVoiceButtonTouchStart(e) {\r\n            if (this.myUserInfo.isVerify == 0) {\r\n                uni.showToast({\r\n                    title: '只有认证过的用户才可以发送语音消息哦',\r\n                    icon: 'none'\r\n                });\r\n                return;\r\n            }\r\n            this.touchY = e.changedTouches[0].clientY,\r\n                this.$refs.recordingPopup.open();\r\n            this.recorderManager.start(this.options);\r\n            this.voiceTimer();\r\n        },\r\n        onVoiceButtonTouchEnd() {\r\n            this.$refs.recordingPopup.close();\r\n            this.recorderManager.stop();\r\n            this.stopTimer = true;\r\n        },\r\n        onVoiceButtonTouchMove(e) {\r\n            console.log(e);\r\n            if (this.touchY - e.changedTouches[0].clientY > 50) {\r\n                this.cancelSendVoice = true;\r\n            }\r\n            else {\r\n                this.cancelSendVoice = false;\r\n            }\r\n        },\r\n        /**\r\n         * @description 点击发送按钮时\r\n         */\r\n        sendButtonClick() {\r\n            if (this.sendVoice) {\r\n            }\r\n            else {\r\n                if (this.sendText) {\r\n                    this.sendMessage(this.fromUserInfo.id, this.sendText);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * @description 切换语音还是文字输入\r\n         */\r\n        onChangeSendTypeClick() {\r\n            this.sendVoice = !this.sendVoice;\r\n            if (this.sendVoice) {\r\n                this.inputFocus = false;\r\n                this.showEmojiPicker = false;\r\n                uni.hideKeyboard();\r\n            }\r\n        },\r\n        /**\r\n         * @description 点击图片选择\r\n         */\r\n        onImageChooseClick() {\r\n            let _this = this;\r\n            uni.chooseImage({\r\n                count: 9,\r\n                sizeType: ['original', 'compressed'],\r\n                sourceType: ['album'],\r\n                success: function (res) {\r\n                    // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\r\n                    var tempFilePaths = res.tempFilePaths;\r\n                    _this.uploadImageOrVoice(tempFilePaths);\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * @description 点击拍照图标时\r\n         */\r\n        onCameraIconClick() {\r\n            let _this = this;\r\n            uni.chooseImage({\r\n                count: 1,\r\n                sizeType: ['original', 'compressed'],\r\n                sourceType: ['camera'],\r\n                success: function (res) {\r\n                    // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片\r\n                    var tempFilePaths = res.tempFilePaths;\r\n                    _this.uploadImageOrVoice(tempFilePaths);\r\n                }\r\n            });\r\n        },\r\n        /**\r\n         * @description 点击笑脸图标时\r\n         */\r\n        onSmileIconClick() {\r\n            this.showEmojiPicker = !this.showEmojiPicker;\r\n            this.scrollInto = 'show_keyboard';\r\n            if (this.showEmojiPicker) {\r\n                this.inputFocus = false;\r\n                uni.hideKeyboard();\r\n            }\r\n        },\r\n        /**\r\n         * @description 更换表情的分页\r\n         * @param {Obeject} e\r\n         */\r\n        onSwiperChange(e) {\r\n            this.expressionTabPage = e.detail.current;\r\n        },\r\n        /**\r\n         * @description 更换表情的分页\r\n         * @param {number} page\r\n         */\r\n        onExpressionTabClick(page) {\r\n            this.expressionTabPage = page;\r\n        },\r\n        /**\r\n         * @description 点击单个emoji表情\r\n         * @param {string} 单个表情\r\n         */\r\n        onEmojiItemClick(item) {\r\n            this.sendText = this.sendText + item;\r\n        },\r\n        /**\r\n         * @description 点击单个emoji表情\r\n         * @param {Object} item 单个表情\r\n         */\r\n        onCustomExpressionClick(item) {\r\n            this.sendMessage(this.fromUserInfo.id, item.url.replace(ImageFatherPath, ''), 1);\r\n        },\r\n        /**\r\n         * @description 点击历史图标时\r\n         */\r\n        onHistoryIconClick() {\r\n            console.log(\"onHistoryIconClick\");\r\n            uni.navigateTo({\r\n                url: `/pages/message-secondary-page/chat-history/chat-history?fromUserId=${this.fromUserInfo.id}`\r\n            });\r\n        },\r\n        /**\r\n         * @description  是否在聊天内容上显示时间\r\n         * @param {Object} index 第几条\r\n         */\r\n        showChatCreatTime(index) {\r\n            let messages = this.messageGroup.messages;\r\n            let showtime = false;\r\n            if (index == 0) {\r\n                showtime = true;\r\n            }\r\n            else {\r\n                let menit = GetNumberOfMenit(messages[index - 1].createTime, messages[index].createTime);\r\n                if (menit > 1) {\r\n                    showtime = true;\r\n                }\r\n            }\r\n            return showtime;\r\n        },\r\n        /**\r\n         * @description 语音消息计时器\r\n         */\r\n        voiceTimer() {\r\n            if (this.voiceTime >= 59) { //大于59秒后结束\r\n                return;\r\n            }\r\n            if (this.stopTimer) { //主动停止时结束\r\n                this.stopTimer = false;\r\n                return;\r\n            }\r\n            let _this = this;\r\n            setTimeout(function () {\r\n                _this.voiceTime = _this.voiceTime + 1;\r\n                _this.voiceTimer();\r\n            }, 1000);\r\n        },\r\n        /**\r\n         * @function 添加表情\r\n         * @param filename 文件名\r\n         */\r\n        async addExpression(filename) {\r\n            let res = await request({\r\n                data: {\r\n                    method: 'POST',\r\n                    group: 'message',\r\n                    action: 'emoticon/add',\r\n                    data: {\r\n                        filename: filename,\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/x-www-form-urlencoded' // 默认值\r\n                    },\r\n                }\r\n            });\r\n            if (res.data.code === REQUEST_SUCCEEDED_CODE) {\r\n                this.$refs.customExpression.refresh();\r\n                uni.showToast({\r\n                    title: '添加成功',\r\n                    icon: 'success'\r\n                });\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        /**\r\n         * @description 删除消息\r\n         * @param {number} id 消息的id\r\n         */\r\n        async deleteMessage(id) {\r\n            if (this.messageGroup) {\r\n                let messages = this.messageGroup.messages;\r\n                for (let i = messages.length - 1; i >= 0; i--) {\r\n                    if (messages[i].id == id) {\r\n                        messages.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n                this.messageGroup.messages = messages;\r\n                let res = await request({\r\n                    data: {\r\n                        // type:'websocket/bgxq',\r\n                        method: 'POST',\r\n                        group: 'message',\r\n                        action: `${id}/delete`,\r\n                        data: {\r\n                            id: id\r\n                        },\r\n                        header: {\r\n                            'content-type': 'application/x-www-form-urlencoded' // 默认值\r\n                        },\r\n                    }\r\n                });\r\n                if (res.data.code == REQUEST_SUCCEEDED_CODE) {\r\n                    console.log('deleteMessage', res.data);\r\n                }\r\n                else {\r\n                    console.log(res.data);\r\n                }\r\n                this.saveNewestMessageGroup();\r\n                this.saveNewestUserMessage();\r\n            }\r\n        },\r\n        /**\r\n         * @description 撤回消息\r\n         * @param {number} id 消息的id\r\n         */\r\n        async withdrawMessage(id) {\r\n            let res = await request({\r\n                data: {\r\n                    method: 'POST',\r\n                    // type:'websocket/bgxq',\r\n                    group: 'message',\r\n                    action: `${id}/withdraw`,\r\n                    data: {\r\n                        id: id\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/x-www-form-urlencoded' // 默认值\r\n                    },\r\n                }\r\n            });\r\n            if (res.data.code == REQUEST_SUCCEEDED_CODE) {\r\n                if (this.messageGroup) {\r\n                    let messages = this.messageGroup.messages;\r\n                    for (let i = messages.length - 1; i >= 0; i--) {\r\n                        if (messages[i].id == id) {\r\n                            messages[i] = {\r\n                                id: id,\r\n                                content: '你撤回了一条消息',\r\n                                type: -1,\r\n                                isMe: true,\r\n                                createTime: messages[i].createTime\r\n                            };\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.messageGroup.messages = messages;\r\n                    this.saveNewestMessageGroup();\r\n                    this.saveNewestUserMessage();\r\n                }\r\n            }\r\n            else {\r\n                console.log(res.data);\r\n            }\r\n        },\r\n        /**\r\n         * @description 发送消息\r\n         * @param toUserId {}\r\n         */\r\n        async sendMessage(toUserId, text, type = 0, voiceLen = 0) {\r\n            let res = await request({\r\n                data: {\r\n                    method: 'POST',\r\n                    group: 'message',\r\n                    action: 'send',\r\n                    data: {\r\n                        content: text,\r\n                        type,\r\n                        toUserId,\r\n                        time: voiceLen\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/x-www-form-urlencoded' // 默认值\r\n                    },\r\n                }\r\n            });\r\n            if (res.data.code === '00000') {\r\n                this.sendText = '';\r\n                let result = res.data.data;\r\n                if (this.messageGroup.messages) {\r\n                    this.messageGroup.messages.push({\r\n                        content: type == 0 ? text : result.url + text,\r\n                        type: type,\r\n                        id: result.messageId,\r\n                        isMe: true,\r\n                        createTime: getTime(),\r\n                        isNotRead: true,\r\n                        time: voiceLen\r\n                    });\r\n                }\r\n                else {\r\n                    this.messageGroup = {\r\n                        fromUserId: toUserId,\r\n                        type: '',\r\n                        badgeNumber: 0,\r\n                        messages: [{\r\n                                content: type == 1 ? result.url + text : text,\r\n                                type: type,\r\n                                isMe: true,\r\n                                id: result.messageId,\r\n                                createTime: getTime(),\r\n                                isNotRead: true,\r\n                                time: voiceLen\r\n                            }]\r\n                    };\r\n                }\r\n                this.scrollInto = `chat_${result.messageId}`;\r\n                this.saveNewestUserMessage();\r\n                this.saveNewestMessageGroup();\r\n            }\r\n            else {\r\n                console.log(res);\r\n            }\r\n        },\r\n        /**\r\n         * @description 获取发送消息的已读未读状态\r\n         */\r\n        async getIsBeenRead(ids) {\r\n            let res = await request({\r\n                data: {\r\n                    method: 'GET',\r\n                    group: 'message',\r\n                    action: `unread/check`,\r\n                    data: {\r\n                        ids: JSON.stringify(ids)\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/x-www-form-urlencoded' // 默认值\r\n                    },\r\n                }\r\n            });\r\n            if (res.data.code == REQUEST_SUCCEEDED_CODE) {\r\n                return res.data.data;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        },\r\n        /**\r\n         * @description 聊天数据处理 排序、去重、获取未读数据\r\n         * @param {MessageItem []} messages 聊天记录\r\n         * @param {number} fromUserId 聊天对象的id\r\n         */\r\n        async messageDataProcessing(messages, fromUserId) {\r\n            let unReadMessage = await this.getUnReadMessage(fromUserId);\r\n            messages = messages.concat(unReadMessage);\r\n            let iDs = [];\r\n            let tempMessages = [];\r\n            messages.forEach((item) => {\r\n                if (iDs.indexOf(item.id) == -1) {\r\n                    iDs.push(item.id);\r\n                    tempMessages.push(item);\r\n                }\r\n            });\r\n            tempMessages.sort(function (a, b) {\r\n                let id_a = a.id;\r\n                let id_b = b.id;\r\n                return id_a >= id_b ? 1 : -1;\r\n            });\r\n            console.log(tempMessages);\r\n            return tempMessages;\r\n        },\r\n        /**\r\n         * @function 获取未读消息\r\n         * @param userId 聊天对象的用户Id\r\n         * @returns {Promise<UnReadMessageItem[]>}\r\n         */\r\n        async getUnReadMessage(userId) {\r\n            let res = await request({\r\n                data: {\r\n                    method: 'DELETE',\r\n                    group: 'message',\r\n                    action: 'unRead/message',\r\n                    data: {\r\n                        userId: userId,\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/x-www-form-urlencoded' // 默认值\r\n                    },\r\n                }\r\n            });\r\n            if (res.data.code === REQUEST_SUCCEEDED_CODE) {\r\n                let unReadMessage = res.data.data;\r\n                console.log('unReadMessage', unReadMessage);\r\n                return unReadMessage;\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        },\r\n        /**\r\n         * @description 储存最新的消息组\r\n         */\r\n        async saveNewestMessageGroup() {\r\n            let storageKey = getChatRecordKey(this.myUserInfo.id, this.fromUserInfo.id);\r\n            uni.setStorage({\r\n                key: storageKey,\r\n                data: this.messageGroup\r\n            }); //保存聊天记录\r\n        },\r\n        /**\r\n         * @description 储存最新的消息列表\r\n         */\r\n        async saveNewestUserMessage() {\r\n            if (this.messageGroup.messages) {\r\n                let userMessageListItems = await getUserMessageList(this.myUserInfo.id);\r\n                let have_data = false;\r\n                let lastMessage = this.messageGroup.messages[this.messageGroup.messages.length - 1];\r\n                for (let i = 0; i < userMessageListItems.length; i++) {\r\n                    if (userMessageListItems[i].userId === this.fromUserInfo.id) {\r\n                        let userMessageListItem = userMessageListItems[i];\r\n                        changeUnreadMessageSum(-userMessageListItem.unreadSum);\r\n                        userMessageListItem.lastMessage = lastMessage.content;\r\n                        userMessageListItem.lastMessageType = lastMessage.type;\r\n                        userMessageListItem.lastTime = lastMessage.createTime;\r\n                        userMessageListItem.unreadSum = 0;\r\n                        userMessageListItems.splice(i, 1);\r\n                        userMessageListItems.push(userMessageListItem);\r\n                        have_data = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (this.fromUserInfo) {\r\n                    if (!have_data) {\r\n                        userMessageListItems.push({\r\n                            avatar: this.fromUserInfo.avatar,\r\n                            lastMessage: lastMessage.content,\r\n                            lastMessageType: lastMessage.type,\r\n                            lastTime: lastMessage.createTime,\r\n                            online: this.onLineState,\r\n                            unreadSum: 0,\r\n                            userId: this.fromUserInfo.id,\r\n                            username: this.fromUserInfo.username\r\n                        });\r\n                    }\r\n                }\r\n                console.log(\"this.myUserInfo.id\", this.myUserInfo.id);\r\n                console.log(\"this.messageGroup\", this.messageGroup);\r\n                console.log(\"have_data\", have_data);\r\n                console.log('userMessageListItems', userMessageListItems);\r\n                let storageKey = getUserMessageListKey(this.myUserInfo.id);\r\n                uni.setStorage({ key: storageKey, data: userMessageListItems });\r\n            }\r\n        },\r\n        /**\r\n         * @description 上传图片、语音\r\n         * @param {string[]} filePath 文件的链接\r\n         * @param {number} type 类型 1-图片 2-语音\r\n         * @param {number} voiceLen 类型为语音时需要，语音的时长\r\n         */\r\n        async uploadImageOrVoice(filePath, type = 1, voiceLen) {\r\n            let _this = this;\r\n            let uploadImageOrVoices = [];\r\n            let filesNumber = filePath.length;\r\n            if (type == 2) {\r\n                if (this.myUserInfo.isVerify == 0) {\r\n                    uni.showToast({\r\n                        title: '只有认证过的用户才可以发送语音消息哦',\r\n                        icon: 'none'\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n            //没有文件直接取消\r\n            if (filesNumber < 1) {\r\n                return;\r\n            }\r\n            //先获取上传凭证\r\n            let FileVouchers;\r\n            let res = await request({\r\n                data: {\r\n                    method: 'GET',\r\n                    group: 'message',\r\n                    action: 'tokens',\r\n                    data: {\r\n                        sum: filesNumber\r\n                    },\r\n                    header: {\r\n                        'content-type': 'application/x-www-form-urlencoded',\r\n                    },\r\n                },\r\n            });\r\n            if (res.data.code === REQUEST_SUCCEEDED_CODE) {\r\n                FileVouchers = res.data.data;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n            //保存要上传的文件名\r\n            FileVouchers.forEach((item) => {\r\n                uploadImageOrVoices.push(item.fileName);\r\n            });\r\n            filePath.forEach(async (item, index) => {\r\n                if (type == 1) {\r\n                    uni.showLoading({\r\n                        title: `正在发送${index + 1}/${filesNumber}`,\r\n                    });\r\n                }\r\n                await uni.uploadFile({\r\n                    url: UploadUrl,\r\n                    filePath: item,\r\n                    name: 'file',\r\n                    formData: {\r\n                        'key': FileVouchers[index].fileName,\r\n                        'token': aes.decrypt(FileVouchers[index].token)\r\n                    },\r\n                    success() {\r\n                        _this.sendMessage(_this.fromUserInfo.id, FileVouchers[index].fileName, type, voiceLen);\r\n                    }\r\n                });\r\n            });\r\n            uni.hideLoading();\r\n        }\r\n    }\r\n};\r\n","import mod from \"-!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./chat-content.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./chat-content.vue?vue&type=style&index=0&lang=scss&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1642830372999\n      var cssReload = require(\"E:/HBuilderX.3.3.3.20211225.full/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}